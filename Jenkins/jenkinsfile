pipeline {
    agent any
    environment  {
        //Azure Credentials 
        SUBSCRIPTION_ID = credentials('Subscription_ID')
        CLIENT_ID= credentials('Client_ID')
        CLIENT_SECRET= credentials('Client_Secret')
        TENANT_ID= credentials('Tenant_ID')

        //Dockerhub credentials 
        DOCKERHUB_USERNAME = credentials('Dockerhub_Username')   
        DOCKERHUB_PASSWORD = credentials('Dockerhub_Password')
        location= "Centralindia"
        
    }
    stages {
        stage('Checkout Repository'){
            steps{
                // Checkout to main branch in git repository.
                git branch: 'main' , url: 'https://github.com/rjnimbalkar99/Task-Manager-DevOps' // Clones the specified branch from the Git repository.
            }
        }
        stage('Docker Build'){
            steps{
                // Log in to Docker Hub, build the image & push Docker image to DockerHub 
                    sh '''
                        docker login --username ${DOCKERHUB_USERNAME}  --password ${DOCKERHUB_PASSWORD} 
                        docker build -t task-manager:\${BUILD_ID} .
                        docker tag task-manager:\${BUILD_ID} rjnimbalkar99/task-manager:\${BUILD_ID}

                        # Pushes the tagged image to Docker Hub for storage.
                        docker push rjnimbalkar99/task-manager:\${BUILD_ID}
                    '''  
            }
        }
        stage('Update Helm Chart'){
            steps {
                dir('helm/task-manager_chart'){
                    // Update the tag in Helm chart.
                    withCredentials([usernamePassword(credentialsId: 'Github_credentials', usernameVariable: 'GITHUB_USERNAME', passwordVariable: 'GITHUB_PAT')]){
                        sh '''
                            sed -i 's/tag: .*/tag: "\${BUILD_ID}"/' values.yaml           # Updates the image tag in values.yaml to the new build ID.
                            echo "${BUILD_ID}"                                            # Outputs the current build ID for logging purposes.
                            git config --global user.name ${GITHUB_USERNAME}
                            git config --global user.email "rjnimbalkar99@gmail.com"
                            git clean -fdx                                                # Removes all untracked files and directories from the working directory.
                            git add -A                                                    # Stages all changes for commit.
                            git commit -m "Update tag in Helm chart"
                            git remote set-url origin https://${GITHUB_USERNAME}:${GITHUB_PAT}@github.com/rjnimbalkar99/Task-Manager
                            git push origin main                                          # Pushes the committed changes back to the main branch of the repository.
                        '''
                        
                    }
                }
            }
        }
        stage('Create AKS Cluster'){
            steps{
                //Check Azure-cli installation & Create AKS cluster.
                sh ''' 
                   az version

                   # Logs in to Azure using the service principal credentials & Sets the active Azure subscription.
                   az login --service-principal --username ${CLIENT_ID} --password ${CLIENT_SECRET} --tenant ${TENANT_ID}
                   az account set --subscription ${SUBSCRIPTION_ID}
                   
                   # Set up AKS cluster & creates namespace inside the cluster.
                   az group create --name Web --location ${location}
                   az aks create --name Task-manager --resource-group Web --node-count 1 --disable-rbac --no-ssh-key
                   az aks get-credentials --resource-group Web --name Task-manager --overwrite-existing
                   kubectl create namespace task-manager-app

                '''
            }
        }
        stage('Deploy Helm Chart'){
            steps{
                dir('helm'){
                    //Deploy Helm chart
                sh '''
                   # Switch to task-manager-app namespace & Deploy helm chart 
                   kubectl config set-context --current --namespace task-manager-app
                   helm install task-manager ./task-manager_chart --set image.tag=${BUILD_ID}    
                   kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/cloud/deploy.yaml
                '''
                }
            }
        }
    }
}
